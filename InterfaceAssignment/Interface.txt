1. What is an interface in Java?
Ans: An interface in Java is a mechanism that is used to achieve complete abstraction. It is basically a kind of
class that contains only constants and abstract methods.

2. Which modifiers are allowed for methods in an Interface?Explain with an example
Ans: Only abstract and public modifiers are allowed for methods in interfaces.

3. What is the use of interface in Java?
Ans: There are many reasons to use interfaces in java. They are as follows:
a. An interface is used to achieve full abstraction.
b. Using interfaces is the best way to expose our projectâ€™s API to some other project.
c. Programmers use interfaces to customise features of software differently for different objects.
d. By using interface, we can achieve the functionality of multiple inheritance.

4. What is the difference between abstract class and interface in Java?
Key Differences:

Abstract classes:
Can have constructors.
Can have fields, methods with implementation, and abstract methods.
Can be extended using the extends keyword.
Can have access modifiers like public, protected, or private.

Interfaces:
Cannot have constructors.
Cannot have fields or methods with implementation (until Java 8 with default methods and static methods).
Can be implemented by classes using the implements keyword.
All methods in an interface are implicitly public and abstract (before Java 8).